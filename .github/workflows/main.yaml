name: ci

on:
  push:
    branches:
      - "main"

jobs:
  check_tag:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      tag_exists: ${{ steps.check_tag.outputs.tag_exists }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download kli
        id: download_kli
        run: |
          curl -sL https://github.com/KaribuLab/kli/releases/download/v0.2.2/kli  --output kli
      - name: Check tag
        id: check_tag
        run: |
          chmod +x ./kli
          LATEST_VERSION=$( ./kli semver 2>&1 )
          LATEST_GIT_TAG=$( git describe --tags --abbrev=0 || echo "" )
          echo "latest_version=$LATEST_VERSION"
          echo "latest_git_tag=$LATEST_GIT_TAG"
          if [ "$LATEST_VERSION" == "$LATEST_GIT_TAG" ]; then
            echo "tag_exists=true"
            echo "tag_exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "tag_exists=false"
            echo "tag_exists=false" >> "$GITHUB_OUTPUT"
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: kli
          path: kli
  create_tag:
    needs: check_tag
    runs-on: ubuntu-latest
    if: needs.check_tag.outputs.tag_exists == 'false'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.KARIBU_SSH_KEY }}
      - name: Set up Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      - name: Download kli
        uses: actions/download-artifact@v4
        with:
          name: kli
          path: ./
      - name: Update version
        run: |
          chmod +x kli
          LATEST_VERSION=$( ./kli semver 2>&1 )
          sed -i "s/version=\"[^\"]*\"/version=\"${LATEST_VERSION#v}\"/" setup.py
          sed -i "s/version\s=\s\"[^\"]*\"/version = \"${LATEST_VERSION#v}\"/" pyproject.toml
          HAS_CHANGES=$( git status | grep setup.py | wc -l )
          if [ "$HAS_CHANGES" -eq 1 ]; then
            git add setup.py
            git commit -m "chore: Version update ${LATEST_VERSION#v}"
          else
            echo "No changes in setup.py"
          fi
      - name: Create tag
        id: create_tag
        run: |
          chmod +x kli
          ./kli semver -t
  build_and_publish:
    needs: create_tag
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/logging-commons
    permissions:
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      - name: Install dependencies
        run: |
          pipenv install --deploy --dev --ignore-pipfile

      - name: Build package
        run: |
          pipenv run python setup.py sdist

      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
